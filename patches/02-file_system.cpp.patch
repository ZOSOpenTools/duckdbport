From 220ded30969cb15d31e2a6c714c9b66f493cebab Mon Sep 17 00:00:00 2001
From: v1gnesh <v1gnesh@users.noreply.github.com>
Date: Wed, 31 May 2023 08:16:32 +0000
Subject: [PATCH] tidy up

---
 src/common/file_system.cpp | 41 ++++++++++----------------------------
 1 file changed, 10 insertions(+), 31 deletions(-)

diff --git a/src/common/file_system.cpp b/src/common/file_system.cpp
index be46042d64..75059e7b99 100644
--- a/src/common/file_system.cpp
+++ b/src/common/file_system.cpp
@@ -27,6 +27,8 @@
 #ifdef __MVS__
 #define _XOPEN_SOURCE_EXTENDED 1
 #include <sys/resource.h>
+// enjoy - https://reviews.llvm.org/D92110
+#define PATH_MAX _XOPEN_PATH_MAX
 #endif
 
 #else
@@ -83,38 +85,17 @@ void FileSystem::SetWorkingDirectory(const string &path) {
 	}
 }
 
-# ifdef __MVS__
-
 idx_t FileSystem::GetAvailableMemory() {
-    errno = 0;
-
-    struct rlimit limit;
-    int rlim_rc = getrlimit(RLIMIT_AS, &limit);
-	  idx_t max_memory = MinValue<idx_t>(limit.rlim_max, UINTPTR_MAX);
-
-    if (errno != 0) {
-        return DConstants::INVALID_INDEX;
-    }
-    return max_memory;
-}
-
-string FileSystem::GetWorkingDirectory() {
-
-    // use _XOPEN_PATH_MAX instead of PATH_MAX
-    auto buffer = make_unsafe_uniq_array<char>(_XOPEN_PATH_MAX);
-    char *ret = getcwd(buffer.get(), _XOPEN_PATH_MAX);
-    if (!ret) {
-      throw IOException("Could not get working directory!");
-    }
-    return string(buffer.get());
-}
+	errno = 0;
 
+#ifdef __MVS__
+  struct rlimit limit;
+  int rlim_rc = getrlimit(RLIMIT_AS, &limit);
+  idx_t max_memory = MinValue<idx_t>(limit.rlim_max, UINTPTR_MAX);
 #else
-
-idx_t FileSystem::GetAvailableMemory() {
-	errno = 0;
-	idx_t max_memory = MinValue<idx_t>((idx_t)sysconf(_SC_PHYS_PAGES) * (idx_t)sysconf(_SC_PAGESIZE), UINTPTR_MAX);
-	if (errno != 0) {
+  idx_t max_memory = MinValue<idx_t>((idx_t)sysconf(_SC_PHYS_PAGES) * (idx_t)sysconf(_SC_PAGESIZE), UINTPTR_MAX);
+#endif
+  if (errno != 0) {
 		return DConstants::INVALID_INDEX;
 	}
 	return max_memory;
@@ -129,8 +110,6 @@ string FileSystem::GetWorkingDirectory() {
 	return string(buffer.get());
 }
 
-#endif
-
 string FileSystem::NormalizeAbsolutePath(const string &path) {
 	D_ASSERT(IsPathAbsolute(path));
 	return path;
-- 
2.39.1

